{"version":3,"sources":["componets/readonly/ReadyOnly.jsx","componets/editable/Editable.jsx","componets/f.jsx","App.js","index.js"],"names":["ReadyOnly","_ref","item","handleEdit","handleDeleteClick","react_default","a","createElement","className","key","id","Fragment","concat","newPreset","newPage","newBalloon","newDrw","newRev","newDecimal","newUnit","newTarget","newLowerlimit","newUpperlimit","type","onClick","event","Edit_default","Delete_default","Editable","editFormData","handleEditFrormChange","handleCancelClick","onChange","value","name","Save_default","Cancel_default","Drawing","_useState","useState","drw","rev","page","balloon","_useState2","Object","slicedToArray","update","setUpate","_useState3","d4","d3","d2","d1","ang1","ang2","_useState4","inputUpdate","setInputUpdate","_useState5","_useState6","toggleClass","setToggleClass","_useState7","_useState8","decimal","setDecimal","_useState9","_useState10","target","setTarget","_useState11","_useState12","submit","setSubmit","_useState13","_useState14","btn","setBtn","lowerLimit","useRef","Number","upperLimit","preSet","unit","HandleUpdate","trim","prevValue","objectSpread","inputUpdateHandler","valueHandler","Target","toFixed","_useState15","_useState16","editableId","setEditableId","_useState17","_useState18","setEditFormData","preventDefault","fieldName","fieldValue","newFormData","_formValues","formValues","defineProperty","deleteId","newSubmit","toConsumableArray","index","findIndex","splice","onSubmit","newUpdate","nanoid","prev","min","max","step","e","fourDigitTollerance","threeDigitTollerance","twoDigitTollerance","singleDigitTollerance","angTollerance1","angTollerance2","decimalHandler","getValue","toggleHandler","ref","l1","current","LL","UL","prv","editedData","newData","map","editable_Editable","readonly_ReadyOnly","react_html_table_to_excel_default","table","filename","sheet","buttonText","App","f","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.ebedfc50.chunk.js","sourcesContent":["import React from 'react'\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport './readyonly.css'\r\n\r\nconst ReadyOnly = ({item,handleEdit,handleDeleteClick}) => {\r\n  return (\r\n    <tr className='table-list'key={item.id}>\r\n    <>\r\n       \r\n        {/* preset */}\r\n        <td  className='table-elements'>{`${item.newPreset}`}</td>\r\n        {/* Drawing */}\r\n        <td  className='table-desc'>{`Page ${item.newPage}/#${item.newBalloon} ${item.newDrw} Rev ${item.newRev}`}</td>\r\n        {/* Decimal */}\r\n        <td  className='table-elements'>{`${item.newDecimal}`}</td>\r\n        {/* Unit */}\r\n        <td  className='table-elements'>{`${item.newUnit}`}</td>\r\n        {/* Target */}\r\n        <td  className='table-desc'>{`${item.newTarget}`}</td>\r\n        {/* LowerLimit */}\r\n        <td  className='table-elements'>{`${item.newLowerlimit}`}</td>\r\n        {/* UpperLimit */}\r\n        <td  className='table-elements'>{`${item.newUpperlimit}`}</td>\r\n        <td >\r\n          <button type='button'className='icons' onClick={(event)=>handleEdit(event, item)}><EditIcon></EditIcon></button>\r\n          <button type=\"button\" className='icons' onClick={() => handleDeleteClick(item.id)}>\r\n          <DeleteIcon></DeleteIcon>\r\n        </button>\r\n          \r\n        </td>                 \r\n        </>\r\n        </tr>\r\n  )\r\n}\r\n\r\nexport default ReadyOnly","import React from 'react'\r\nimport './editable.css'\r\n\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\n\r\n\r\n\r\nconst Editable = ({editFormData,handleEditFrormChange, handleCancelClick}) => {\r\n  return (\r\n    <tr className='table-list'>\r\n    <>\r\n       \r\n        {/* preset */}\r\n        <td  className='table-elements'  ><input className='eInput' onChange={handleEditFrormChange} value={editFormData.newPreset} name ='surface-range'/></td>\r\n        {/* Drawing */}\r\n        <td  className='table-desc' onChange={handleEditFrormChange} ><input className='eInput' name = 'dr'value={`page ${editFormData.newPage}/#${editFormData.newBalloon} ${editFormData.newDrw} ${editFormData.newRev}`}/></td>\r\n        {/* Decimal */}\r\n        <td  className='table-elements' ><input  className='eInput' name ='d' onChange={handleEditFrormChange} value={editFormData.newDecimal}/></td>\r\n        {/* Unit */}\r\n        <td  className='table-elements' ><input className='eInput'  name = 'u' onChange={handleEditFrormChange} value={editFormData.newUnit}/></td>\r\n        {/* Target */}\r\n        <td  className='table-desc' ><input  className='eInput' name='target' onChange={handleEditFrormChange} value={editFormData.newTarget}/></td>\r\n        {/* LowerLimit */}\r\n        <td  className='table-elements' ><input  className='eInput' name='ll' onChange={handleEditFrormChange} value={editFormData.newLowerlimit}/></td>\r\n        {/* UpperLimit */}\r\n        <td  className='table-elements'><input className='eInput'  name='ul' onChange={handleEditFrormChange} value={editFormData.newUpperlimit}/></td>\r\n        <td>\r\n          <button type='submit'><SaveIcon></SaveIcon></button>\r\n          <button type='submit'><CancelIcon></CancelIcon></button>     \r\n        </td>                 \r\n        </>\r\n        </tr>\r\n  )\r\n}\r\n\r\nexport default Editable","import React, {  useState,useRef,useEffect } from 'react'\r\nimport {nanoid} from 'nanoid'\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel'\r\n\r\nimport './drawing.css'\r\nimport ReadyOnly from './readonly/ReadyOnly'\r\nimport Editable from './editable/Editable'\r\n\r\n\r\n\r\nconst Drawing = () => {\r\n// Drawing states---------------------------------------------------------------------------->>.\r\n\r\nconst [update, setUpate]= useState({\r\n    drw:'', \r\n    rev:'',\r\n    page:'', \r\n    balloon:'',\r\n});\r\n\r\n//Tollerance states------------------------------------------------------------------------->>\r\n\r\nconst [inputUpdate, setInputUpdate]= useState({ d4:'',d3:'',d2:'',d1:'',ang1:'',ang2:''});\r\n\r\n// Toggle state ---------------------------------------------------------------------------->>\r\nconst [toggleClass, setToggleClass] = useState('')\r\n\r\n// Conversion state ------------------------------------------------------------------------->>\r\nconst [decimal,setDecimal]  = useState(null)\r\n\r\n\r\n// output state ----------------------------------------------------------------------------->>\r\nconst [target, setTarget] = useState({})\r\nconst [submit, setSubmit] = useState([]);\r\nconst [btn, setBtn]= useState(false)\r\n\r\n//range state ------------------------------------------------------------------------->>\r\n\r\nlet lowerLimit = useRef(Number);\r\nlet upperLimit = useRef(Number);\r\n\r\n//////////////////////////////////////////////////////////////////////////////////////////////\r\nconst preSet = ['Z001', 'Z002', '2200']\r\nconst unit = ['Inch','deg','µin']\r\n\r\n// Range handle _------------------------------------------------------------------------->>\r\nconst rangeHandler=()=>{\r\n   \r\n  let l1 =lowerLimit.current.name\r\n  let LL = Number(lowerLimit.current.value);\r\n  let UL = Number(upperLimit.current.value);\r\n   setTarget((prv)=>{\r\n    setBtn(true)\r\n    \r\n    if(l1==='inch-range'){\r\n      \r\n      return{...prv,lowerLimit:LL, upperLimit:UL,preSet:preSet[1],unit:unit[0], Target:'', decimal:4}\r\n    }else  if (l1==='ang-range'){\r\n      return {...prv,lowerLimit:LL, upperLimit:UL,preSet:preSet[1],unit:unit[1], Target:'', decimal:4}\r\n    }else if(l1==='surface-range'){\r\n      return {...prv,lowerLimit:LL, upperLimit:UL,preSet:preSet[1],unit:unit[2], Target:'', decimal:4}\r\n    }   \r\n\r\n  })\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// Drawing details---------------------------------------------------------------->\r\nconst HandleUpdate= (event) => {\r\n\r\n    const value = event.target.value.trim();\r\n    const name = event.target.name.trim();\r\n\r\n    setUpate((prevValue)=>{\r\n        if(name==='drw'){\r\n            return {\r\n                ...prevValue,\r\n                drw:value,\r\n                \r\n            }\r\n        } else if(name===\"rev\"){\r\n            return {\r\n                ...prevValue,\r\n                rev:value,\r\n                \r\n            }\r\n        }else if (name===\"page\"){\r\n            return {\r\n                ...prevValue,\r\n                page:value\r\n            }\r\n\r\n\r\n        }else if (name===\"balloon\"){\r\n            return {\r\n                ...prevValue,\r\n                balloon:value\r\n            }\r\n\r\n   }});\r\n\r\n}\r\n////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// Tolerance value---------------------------------------------------------------------->>\r\nconst inputUpdateHandler= (event) => {    \r\n    const value = event.target.value.trim();\r\n    const name = event.target.name.trim();\r\n\r\n    setInputUpdate((prevValue)=>{\r\n        if(name==='d4'){\r\n            return {\r\n                ...prevValue,\r\n                d4:value,\r\n            }}else if(name ==='d3'){\r\n              return {\r\n                ...prevValue,\r\n                d3:value,\r\n            }}else if(name ==='d2'){\r\n              return {\r\n                ...prevValue,\r\n                d2:value,\r\n            }}else if(name ==='d1'){\r\n              return {\r\n                ...prevValue,\r\n                d1:value,\r\n            }}else if(name ==='ang1'){\r\n              return {\r\n                ...prevValue,\r\n                ang1:value,\r\n            }}else if(name ==='ang2'){\r\n                return {\r\n                  ...prevValue,\r\n                  ang2:value,\r\n              }}    \r\n        });\r\n\r\n        \r\n} \r\n\r\n///////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// Dropdown- decimal ---------------------------------------------------------------------->\r\nconst decimalHandler=(event)=>{\r\n    const value  = +event.target.value\r\n    \r\n    const fourDigitTollerance = Number(inputUpdate.d4);\r\n    const threeDigitTollerance = Number(inputUpdate.d3);\r\n    const twoDigitTollerance = Number(inputUpdate.d2);\r\n    const singleDigitTollerance = Number(inputUpdate.d1);\r\n    const angTollerance1 = Number(inputUpdate.ang1);\r\n    const angTollerance2 = Number(inputUpdate.ang2);\r\n  \r\n    setDecimal(()=>{\r\n      if(value===4){\r\n        return fourDigitTollerance\r\n      }else if(value===3){\r\n        return threeDigitTollerance\r\n      }else if(value ===2){\r\n        return twoDigitTollerance\r\n      }else if(value ===1){\r\n            return singleDigitTollerance \r\n        }else if(value ===0){\r\n        return angTollerance1\r\n      }else if(value===5){\r\n        return angTollerance2\r\n      }\r\n    })\r\n    \r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// Dropdown -target---------------------------------------------------------------->>\r\nconst toggleHandler= (event)=>{\r\n  const getValue = event.target.value;\r\n  setToggleClass(getValue);\r\n//   console.log(getValue)\r\n\r\n  if(getValue==='a'){\r\n   setBtn(true)\r\n  }else if(getValue==='b'){\r\n    setBtn(true)\r\n  }else if(getValue==='c'){\r\n    setBtn(true)\r\n  }else{\r\n    setBtn(false)\r\n  }\r\n  \r\n}\r\n\r\n//////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// target range thread ----> output------------------------------------------------------>>\r\nconst valueHandler=(event)=>{\r\n    \r\n    const name = event.target.name.trim();\r\n\r\n    setTarget(()=>{\r\n        \r\n\r\n        if(name==='target'){\r\n\r\n            const value = +event.target.value.trim();\r\n\r\n            let Target = value;\r\n            let upperLimit = +(decimal + Target).toFixed(4);\r\n            let lowerLimit = Target - decimal >= 0 ? +(Target -decimal).toFixed(4)  :0\r\n\r\n            return({preSet:preSet[0],Target,lowerLimit,upperLimit, decimal:'4',unit:unit[0]})\r\n\r\n        }else if(name==='angle'){\r\n\r\n            const value = +event.target.value.trim();\r\n            let Target = value;\r\n            let upperLimit = +(decimal + Target).toFixed(4);\r\n            let lowerLimit = Target - decimal >= 0 ? +(Target -decimal).toFixed(4)  :0\r\n\r\n            return({preSet:preSet[0],Target,lowerLimit,upperLimit, decimal:'4',unit:unit[1]})\r\n\r\n        }else if (name ==='thread'){\r\n\r\n            const value = event.target.value.trim();\r\n\r\n            return({preSet:preSet[2],Target:value,lowerLimit:'',upperLimit:'', decimal:'',unit:''})\r\n\r\n        }\r\n\r\n    })\r\n\r\n\r\n    \r\n    \r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// Form submit ----------------------------------------------------------------------------->>\r\n\r\nconst handleAddFormSubmit = (event)=>{\r\n    event.preventDefault()\r\n\r\n    const newUpdate = {\r\n        id:nanoid(),\r\n        //Drw <data></data>\r\n        newDrw:update.drw, \r\n        newRev:update.rev,\r\n        newPage:update.page, \r\n        newBalloon:update.balloon,\r\n\r\n        // tol data\r\n        newPreset:target.preSet,\r\n        newTarget:target.Target,\r\n        newUpperlimit:target.upperLimit,\r\n        newLowerlimit:target.lowerLimit,\r\n        newDecimal:target.decimal,\r\n        newUnit:target.unit,\r\n    \r\n        }\r\n\r\n        setSubmit((prev)=>{\r\n            return [...prev, newUpdate]\r\n        })\r\n      \r\n      \r\n}\r\n\r\n\r\n\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// Local storage ------------------------------------------------------------------------->>>>>>>>>\r\n\r\n// let store = []\r\n// const stoarge = useEffect(()=>{\r\n//     localStorage.setItem('List', JSON.stringify(target))\r\n// },[target])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst [editableId, setEditableId] = useState(null)\r\nconst [editFormData, setEditFormData] =useState({\r\n\r\n    //Drw <data></data>\r\n    newDrw:'', \r\n    newRev:'',\r\n    newPage:'', \r\n    newBalloon:'',\r\n\r\n    // tol data\r\n    newPreset:'',\r\n    newTarget:+'',\r\n    newUpperlimit:+'',\r\n    newLowerlimit:+'',\r\n    newDecimal:'',\r\n    newUnit:'',\r\n})\r\n\r\n\r\n//edit form\r\nconst handleEditFrormChange = (event)=>{\r\nevent.preventDefault()\r\n\r\nconst fieldName = event.target.name;\r\nconst fieldValue = event.target.value;\r\n\r\nconst newFormData = {...editFormData}\r\nnewFormData[fieldName]= fieldValue\r\n\r\nsetEditFormData(newFormData)\r\n\r\n}\r\n\r\n// console.log(target)\r\n// console.log(submit)\r\n// console.log(editFormData)\r\n\r\n\r\n//edit value\r\nconst handleEdit = (event, item)=>{\r\n    event.preventDefault()\r\n    setEditableId(item.id)\r\n\r\n    const formValues = {\r\n        newDrw:item.newDrw, \r\n        newRev:item.newRev,\r\n        newPage:item.newPage, \r\n        newBalloon:item.newBalloon,\r\n    \r\n        // tol data\r\n        newPreset:item.newPreset,\r\n        newPreset:item.newPreset,\r\n        newUpperlimit:item.newUpperlimit,\r\n        newLowerlimit:item.newLowerlimit,\r\n        newDecimal:item.newDecimal,\r\n        newUnit:item.newUnit,\r\n    }\r\n\r\n    setEditFormData(formValues)\r\n\r\n}\r\n\r\n//////save//////\r\n\r\nconst handleEditFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const editedData = {\r\n      id: editableId,\r\n      newDrw:editFormData.newDrw, \r\n      newRev:editFormData.newRev,\r\n      newPage:editFormData.newPage, \r\n      newBalloon:editFormData.newBalloon,\r\n  \r\n      // tol data\r\n      newPreset:editFormData.newPreset,\r\n      newTarget:editFormData.newTarget,\r\n      newUpperlimit:editFormData.newUpperlimit,\r\n      newLowerlimit:editFormData.newLowerlimit,\r\n      newDecimal:editFormData.newDecimal,\r\n      newUnit:editFormData.newUnit,\r\n    };\r\n\r\n    const newData = [...submit];\r\n\r\n    const index = submit.findIndex((item) => item.id === editableId);\r\n\r\n    newData[index] = editedData;\r\n\r\n    setSubmit(newData);\r\n    setEditableId(null);\r\n  };\r\n\r\n\r\n\r\n  //////Delete/////////////////////\r\n\r\n  const handleDeleteClick = (deleteId) => {\r\n    const newSubmit = [...submit];\r\n\r\n    const index = submit.findIndex((item) => item.id === deleteId);\r\n\r\n    newSubmit.splice(index, 1);\r\n\r\n    setSubmit(newSubmit);\r\n  };\r\n//////// Cancel  //////\r\n\r\nconst handleCancelClick = () => {\r\n    setEditableId(null);\r\n  };\r\n///////////////////////////////////////\r\n\r\n\r\n\r\n//////////////////////////////////////End ///////////////////////////////////////////////////////////\r\n  return (\r\n    <> \r\n    <div className='outer-container'> \r\n        <div className='container'>       \r\n            <h1>Emmott dimensional sheet generator</h1>\r\n                <form onSubmit={handleAddFormSubmit}>\r\n                {/* Drawing data */}\r\n                    <div className='drawing-container'>\r\n                        <div className=\"drawing-inner\" >\r\n                            <div className='drawing-heading-container'>\r\n                                <label className='heading'>Drawing No:</label>\r\n                                <input type=\"text\" className='headingInput' name=\"drw\" onChange={HandleUpdate} />\r\n                            </div>\r\n                            <div className='drawing-heading-container'>\r\n                                <label className='heading'>Rev No:</label>\r\n                                <input type=\"text\" className='headingInput'name=\"rev\" onChange={HandleUpdate} />\r\n                            </div>\r\n                            <div className='drawing-heading-container'>\r\n                                <label className='heading'>Page No:</label>\r\n                                <input type=\"text\" className='headingInput' min=\"1\" max=\"10\" name=\"page\" onChange={HandleUpdate} />\r\n                            </div>                \r\n                        </div>\r\n                        <div>\r\n                            {/* Tollarance data */}\r\n                        <h4>DEFAULT TOLLERANCE</h4>\r\n                        {/* tolerance values */}\r\n                        <div className='inch-row'>\r\n                            <span>Inch</span>\r\n                            <div>\r\n                                <label className='heading'>0.XXXX:</label>\r\n                                <input type=\"Number\"className='headingInput' min='0.0000' step='0.0001' max='0.9999' name=\"d4\" onChange={inputUpdateHandler}/>\r\n                    \r\n                                <label className='heading' >0.XXX:</label>\r\n                                <input type=\"Number\"className='headingInput'  min='0.000' step='0.001' max='0.999' name=\"d3\" onChange={inputUpdateHandler}/>\r\n                        \r\n                                <label className='heading'>0.XX:</label>\r\n                                <input type=\"Number\"className='headingInput' min='0.00' step='0.001' max='0.999' name=\"d2\" onChange={inputUpdateHandler}/>\r\n                        \r\n                                <label className='heading'>0.X:</label>\r\n                                <input type=\"Number\" className='headingInput' min='0.00' step='0.01' max='0.99' name=\"d1\" onChange={inputUpdateHandler}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className='angle-row'>\r\n                            <span>Angle</span>\r\n                            <label className='heading'>X:</label>\r\n                            <input type=\"Number\" className='headingInput'min=\"0\" max=\"100\" name=\"ang1\"  onChange={inputUpdateHandler}/>\r\n                            <label className='heading'>0.X:</label>\r\n                            <input type=\"Number\" className='headingInput'min=\"0.00\" step='.01' max=\"100\" name=\"ang2\"  onChange={inputUpdateHandler}/>\r\n                        </div>\r\n                    \r\n                        {/* digit */}\r\n                        <div className='types'>\r\n                            <div className='decimal-container'>\r\n                                <label className='decimail-label'>Balloon No:</label> \r\n                                <input type=\"Number\" min=\"1\"className='decimail-option ballon' max=\"500\" name=\"balloon\" onChange={HandleUpdate} />\r\n                            </div> \r\n                                <div>\r\n                                    <div className='decimal-container'>\r\n                                        <label className='decimail-label'>Decimal:</label>\r\n                                        <select className='decimail-select' onChange={(e)=>decimalHandler(e)}>\r\n                                        <option className='decimail-option'></option>\r\n                                        <option  className='decimail-option'>0</option>\r\n                                        <option  className='decimail-option'>1</option>\r\n                                        <option  className='decimail-option'>2</option>\r\n                                        <option className='decimail-option' >3</option>\r\n                                        <option  className='decimail-option'>4</option>\r\n                                        <option  className='decimail-option'>5</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            {/* types */}\r\n                                <div className='dt'>\r\n                                    <div className='type-container'>\r\n                                        <label className='type-label'>Types:</label>\r\n                                        <select className='type' onChange={(e)=>toggleHandler(e)}>\r\n                                        <option className='types'></option>\r\n                                        <option  className='types'value='1' name='target-type'>Inch</option>\r\n                                        <option  className='types'value='2' name='angle-type'>Angle</option>\r\n                                        <option  className='types'value='a' name='inch-range-type'>Inch-range</option>\r\n                                        <option  className='types'value='b' name='angle-range-type'>Angle-range</option>\r\n                                        <option  className='types'value='c' name='tir-type'>Surface</option>\r\n                                        <option  className='types'value='4' name='thread-type'>Thread</option>\r\n                                        </select>         \r\n                                    </div>                     \r\n                                    <div >\r\n                                        { !btn && <button type='submit' id=\"btn\"  className='btn' >ADD</button>   }          \r\n                                        <div >\r\n                                            {\r\n                                            toggleClass===\"1\" && (        \r\n                                                <input type=\"Number\"  className='toggle'min='0.0000' step='0.0001' max='9999' name='target' onChange={valueHandler} />) \r\n                                            } \r\n                                        </div>\r\n                                        <div >\r\n                                            {\r\n                                            toggleClass===\"2\" && (        \r\n                                                <input type=\"Number\"  className='toggle'min='0.0000' step='0.0001' max='9999' name='angle' onChange={valueHandler} />) \r\n                                            } \r\n                                        </div>                    \r\n                                        {/* Range  */}\r\n                                        <div>\r\n                                        <div >\r\n                                            {\r\n                                            toggleClass===\"a\" && \r\n                                            (<>\r\n                                            <input type=\"Number\"  className='toggle' min='0.0000' step='0.0001' max='9999' name='inch-range' ref={lowerLimit}  />\r\n                                            <input type=\"Number\"  className='toggle' min='0.0000' step='0.0001' max='9999' ref={upperLimit} />\r\n                                            </> )       \r\n                                            }                                   \r\n                                        </div>\r\n                                            <div >\r\n                                                {\r\n                                                toggleClass===\"b\" && \r\n                                                (<>\r\n                                                <input type=\"Number\"  className='toggle' min='0.0000' step='0.0001' max='9999' name='ang-range' ref={lowerLimit}  />\r\n                                                <input type=\"Number\"  className='toggle' min='0.0000' step='0.0001' max='9999' ref={upperLimit}  />\r\n                                                </> )       \r\n                                                }                               \r\n                                            </div>\r\n                                            <div >\r\n                                                {\r\n                                                toggleClass===\"c\" && \r\n                                                (<>\r\n                                                <input type=\"Number\"  className='toggle' min='0.0000' step='0.0001' max='9999' name='surface-range' ref={lowerLimit}  />\r\n                                                <input type=\"Number\"  className='toggle' min='0.0000' step='0.0001' max='9999' ref={upperLimit}  />\r\n                                                </> )       \r\n                                                } \r\n                                                \r\n                                            </div>\r\n                                        {btn && <button onClick={rangeHandler}  className='btn1' id=\"btn\"  >Add</button>} \r\n                                        </div>\r\n                                        <div>\r\n                                            {\r\n                                            toggleClass===\"4\" && (        \r\n                                                <input type=\"String\" className='toggle' name='thread'onChange={valueHandler}/>) \r\n                                            } \r\n                                        </div>          \r\n                                    </div> \r\n                                </div>                           \r\n                            </div>                                 \r\n                        </div>\r\n                    </div>\r\n                   \r\n               {/* {  `Added to table`}       */}\r\n                </form>\r\n            </div>\r\n    {/* Table Data */}\r\n            <div className=\"outer-wrapper\">\r\n               \r\n                <div className=\"table-wrapper\">\r\n                <form onSubmit={handleEditFormSubmit}>\r\n                        <table id='tableData'>\r\n                            <thead> \r\n                                <tr> \r\n                                \r\n                                    <th className='table-elements' >Preset</th>\r\n                                    <th className='table-desc'>Description</th>\r\n                                    <th className='table-elements' >Decimal</th>\r\n                                    <th className='table-elements' >Unit</th>\r\n                                    <th className='table-elements' >Target</th>\r\n                                    <th className='table-elements' >U limit</th>\r\n                                    <th className='table-elements' >L limit</th>\r\n                                    <th className='table-elements' >Actions</th>\r\n                                    \r\n                                </tr>              \r\n                            </thead>\r\n                            <tbody className='table-body'>                             \r\n                                    {submit.map((item)=>(\r\n                                        <>\r\n                                        {editableId===item.id ? <Editable editFormData={editFormData} handleEditFrormChange ={handleEditFrormChange} handleCancelClick={handleCancelClick}/>: <ReadyOnly item={item} handleEdit={handleEdit} handleDeleteClick={handleDeleteClick}/>   \r\n                                        } \r\n                                        </>\r\n                                  ))}\r\n                                    \r\n                            </tbody>\r\n                        </table>\r\n                    </form>\r\n                    <ReactHTMLTableToExcel\r\n                        table='tableData'\r\n                        filename='DDS'\r\n                        sheet = 'Sheet'\r\n                        buttonText = 'Export'\r\n                        className='export-btn'\r\n                        id=\"btn\" \r\n                        \r\n                    />\r\n                </div> \r\n            </div>  \r\n         </div>  \r\n    </>\r\n  )\r\n  }\r\n\r\nexport default Drawing","import React from 'react'\nimport Drawing from \"./componets/Drawing\";\n\nimport F from '../src/componets/f'\n\n\nfunction App() {\n  return (\n    <div>\n      {/* <Drawing/> */}\n      <F/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  \n    <App />\n \n);\n\n\n"],"sourceRoot":""}